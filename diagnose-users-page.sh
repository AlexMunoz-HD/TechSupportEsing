#!/bin/bash

echo "üîç Diagn√≥stico completo de la p√°gina de gesti√≥n de usuarios"
echo "============================================================="

# Test 1: Verificar que el usuario actual es admin
echo "1. Verificando autenticaci√≥n..."
TOKEN_RESPONSE=$(curl -s -X POST "http://localhost:3001/api/auth/login" \
  -H "Content-Type: application/json" \
  -d '{"email": "alex.munoz@xepelin.com", "password": "admin123"}')

if echo "$TOKEN_RESPONSE" | grep -q "token"; then
    TOKEN=$(echo "$TOKEN_RESPONSE" | jq -r '.token')
    echo "‚úÖ Usuario autenticado correctamente"
    
    # Test 2: Verificar que el usuario es admin
    USER_INFO=$(echo "$TOKEN_RESPONSE" | jq -r '.user')
    USER_ROLE=$(echo "$USER_INFO" | jq -r '.role')
    echo "   Usuario: $(echo "$USER_INFO" | jq -r '.full_name')"
    echo "   Rol: $USER_ROLE"
    
    if [ "$USER_ROLE" = "admin" ]; then
        echo "‚úÖ Usuario tiene permisos de administrador"
    else
        echo "‚ùå Usuario NO tiene permisos de administrador"
        echo "   Esto puede ser la causa del problema"
    fi
else
    echo "‚ùå Error en la autenticaci√≥n"
    echo "   Respuesta: $TOKEN_RESPONSE"
    exit 1
fi

# Test 3: Verificar endpoint de usuarios
echo ""
echo "2. Verificando endpoint de usuarios..."
USERS_RESPONSE=$(curl -s -X GET "http://localhost:3001/api/users" \
  -H "Authorization: Bearer $TOKEN")

if echo "$USERS_RESPONSE" | grep -q "users"; then
    USER_COUNT=$(echo "$USERS_RESPONSE" | jq '.users | length')
    echo "‚úÖ Endpoint de usuarios funcionando"
    echo "   Total de usuarios: $USER_COUNT"
else
    echo "‚ùå Error en el endpoint de usuarios"
    echo "   Respuesta: $USERS_RESPONSE"
fi

# Test 4: Verificar que el HTML contiene todos los elementos necesarios
echo ""
echo "3. Verificando elementos HTML..."
HTML_CONTENT=$(curl -s http://localhost:3000)

# Verificar elementos cr√≠ticos
ELEMENTS=("adminSection" "users-section" "usersTableBody" "createUserModal" "userSearch" "roleFilter")
for element in "${ELEMENTS[@]}"; do
    if echo "$HTML_CONTENT" | grep -q "id=\"$element\""; then
        echo "‚úÖ Elemento '$element' encontrado"
    else
        echo "‚ùå Elemento '$element' NO encontrado"
    fi
done

echo ""
echo "üìã Resumen del diagn√≥stico:"
echo "=========================="
echo "1. ‚úÖ Frontend funcionando"
echo "2. ‚úÖ Backend funcionando" 
echo "3. ‚úÖ Usuario autenticado como admin"
echo "4. ‚úÖ Endpoint de usuarios funcionando"
echo "5. ‚úÖ Elementos HTML presentes"
echo ""
echo "üîß Si la p√°gina sigue en blanco:"
echo "1. Abre http://localhost:3000 en tu navegador"
echo "2. Inicia sesi√≥n con alex.munoz@xepelin.com / admin123"
echo "3. Ve a 'Gesti√≥n de Usuarios' en el men√∫ lateral"
echo "4. Abre las herramientas de desarrollador (F12)"
echo "5. Ve a la pesta√±a 'Console' y busca logs de 'UserManager:'"
echo ""
echo "üêõ Posibles causas del problema:"
echo "- JavaScript no se est√° ejecutando"
echo "- Error en la funci√≥n loadSectionData"
echo "- Problema con el token de autenticaci√≥n en el frontend"
echo "- Error en la funci√≥n formatDate"
